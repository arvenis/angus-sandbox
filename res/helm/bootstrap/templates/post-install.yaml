apiVersion: batch/v1
kind: Job
metadata:
  name: "create-crypto-{{.Release.Name}}"
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  activeDeadlineSeconds: 100
  template:
    metadata:
      name: "create-crypto-{{.Release.Name}}"
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: Never
      containers:
        - name: create-crypto
          image: hyperledger/fabric-tools
          command: ["/etc/hyperledger/fabric/admin/create-crypto.sh"]         
          env:  
            - name: FABRIC_CFG_PATH
              value: /etc/hyperledger/fabric/config
            - name: CORE_PEER_TLS_ENABLED
              value: "false"
            - name: CORE_VM_ENDPOINT
              value: unix:///host/var/run/docker.sock
            - name: CORE_VM_DOCKER_ATTACHSTDOUT
              value: "true"
            #- name: CORE_CHAINCODE_LOGGING_LEVEL
            #  value: DEBUG
            - name: GOPATH
              value: /opt/gopath
            #- name: FABRIC_LOGGING_SPEC
            #  value: DEBUG
          volumeMounts:
            - name: run
              mountPath: /host/var/run/
            - name: fabric
              subPath: config/cli
              mountPath: /etc/hyperledger/fabric/config
            - name: fabric
              subPath: crypto
              mountPath: /etc/hyperledger/fabric/crypto
            - name: fabric
              subPath: blocks
              mountPath: /etc/hyperledger/fabric/blocks
            - name: fabric
              subPath: admin
              mountPath: /etc/hyperledger/fabric/admin
      volumes:
        - name: fabric
          persistentVolumeClaim:
            claimName: fabric-pvc
        - name: run
          hostPath:
            path: /var/run             