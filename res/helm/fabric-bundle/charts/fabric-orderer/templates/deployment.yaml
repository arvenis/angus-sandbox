apiVersion: v1
kind: Pod
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: hyperledger
    orderer-id: {{ .Values.ordererName }}  

spec:
  containers:
  - name: orderer
    image: hyperledger/fabric-orderer:{{ .Chart.AppVersion }}      
    env:
    - name: FABRIC_CFG_PATH
      value: /etc/hyperledger/fabric/config
    - name: ORDERER_GENERAL_LOGLEVEL
      value: {{ .Values.ORDERER_GENERAL_LOGLEVEL }}
    - name: FABRIC_LOGGING_SPEC
      value: {{ .Values.FABRIC_LOGGING_SPEC }}
    - name: ORDERER_GENERAL_LISTENADDRESS
      value: 0.0.0.0
    - name: ORDERER_GENERAL_GENESISMETHOD
      value: file
    - name: ORDERER_GENERAL_GENESISFILE
      value: /etc/hyperledger/fabric/blocks/orderer.genesis.block
    - name: ORDERER_GENERAL_LOCALMSPID
      value: {{ .Values.MSPName }}
    - name: ORDERER_GENERAL_LOCALMSPDIR
      value: /etc/hyperledger/fabric/crypto/msp
    - name: ORDERER_GENERAL_TLS_ENABLED
      value: "false"
    # - name: ORDERER_GENERAL_TLS_PRIVATEKEY
    #   value: /etc/hyperledger/fabric/orderer/tls/server.key
    # - name: ORDERER_GENERAL_TLS_CERTIFICATE
    #   value: /etc/hyperledger/fabric/orderer/tls/server.crt
    # - name: ORDERER_GENERAL_TLS_ROOTCAS
    #   value: '[/etc/hyperledger/fabric/orderer/tls/ca.crt]'
    workingDir: /etc/hyperledger/fabric
    ports:
    - containerPort: 7050
    command: ["orderer"]
    volumeMounts:
      - name: localmsp
      mountPath: /etc/hyperledger/fabric/crypto/msp
  volumes:
    - name: localmsp
    # TODO: convert it to secret
      configMap:
        name: {{ .Release.Name }}-configmap
        items:
          - key: ca-cert.pem
            path: cacerts/ca.dev.angus.net-cert.pem
          - key: PeerMSP-cert.pem
            path: signcerts/peer0.dev.angus.net-cert.pem
          - key: PeerMSP-key.pem
            path: keystore/PeerMSP-key.pem
          - key: PeerAdmin-cert.pem
            path: admincerts/Admin